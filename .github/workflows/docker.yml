name: Docker

on:
  pull_request: {}
  push:
    branches:
      - master
    tags:
      - v*.*.*

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.metadata.outputs.is-release }}
      publishable: ${{ steps.metadata.outputs.publishable }}
      version: ${{ steps.metadata.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Application metadata
        id: metadata
        uses: equisoft-actions/application-metadata@v1
        with:
          hotfix-branch-prefix: release/

  docker-build-and-push:
    name: Build and push docker images
    needs: [setup]
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.build-and-push.outputs.image-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Dockerfile
        uses: equisoft-actions/hadolint@v1
        with:
          dockerfile: ./${{ matrix.name }}/Dockerfile
          failure-threshold: error
          working-directory: .

      - name: Build and push
        id: build-and-push
        uses: equisoft-actions/docker-build-and-push@v1
        with:
          registry: ghcr.io
          username: kronostechnologies-build
          password: ${{ secrets.GHCR_TOKEN }}
          name: "clamav"
          working-directory: .
          dockerfile: ./Dockerfile
          push: ${{ needs.setup.outputs.publishable }}
          is-release: ${{ needs.setup.outputs.is-release }}
          version: ${{ needs.setup.outputs.version }}
